1 - With (Int on both sides, valid) (pl, pl)
prog_line pl;
Select pl with pl = pl
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
5000
2 - With (Int on both sides, valid) (s.stmt#, pl)
stmt s; prog_line pl;
Select s with s.stmt# = pl
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
5000
3 - With (Int on both sides, valid) (rd.stmt#, pl)
read rd; prog_line pl;
Select rd.varName with rd.stmt# = pl
A, thenA, elseA, whileA, C, thenC, elseC, whileC, ifA, ifIfA, ifElseA, ifA2, ifWhileA, ifA3, ifIfContainerStmt, ifElseContainerStmt, ifWhileContainerStmt, ifA4, A2, whileWhileA, whileA2, whileIfA, whileElseA, whileA3, whileWhileContainerStmt, whileIfContainerStmt, whileElseContainerStmt, whileA4, A3, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
4 - With (Int on both sides, valid) (pn.stmt#, pl)
print pn; prog_line pl;
Select pn.varName with pn.stmt# = pl
B, thenB, elseB, whileB, ifB, ifIfB, ifElseB, ifB2, ifWhileB, ifB3, ifB4, B2, whileWhileB, whileB2, whileIfB, whileElseB, whileB3, whileB4, B3
5000
5 - With (Int on both sides, valid) (c.stmt#, pl)
call c; prog_line pl;
Select c.procName with c.stmt# = pl
C, thenC, TwoNesting, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ThreeNesting, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, FourNesting, FiveNesting, Final
5000
6 - With (Int on both sides, valid) (w.stmt#, pl)
while w; prog_line pl;
Select w.stmt# with w.stmt# = pl
32, 70, 83, 97, 102, 124, 162, 166, 170, 173, 174, 175, 182, 190, 192, 201, 202, 205
5000
7 - With (Int on both sides, valid) (ifs.stmt#, pl)
if ifs; prog_line pl;
Select ifs.stmt# with ifs.stmt# = pl
10, 52, 57, 80, 111, 126, 153, 155, 157, 167, 177, 181, 184, 188, 191, 197, 198, 203
5000
8 - With (Int on both sides, valid) (a.stmt#, pl)
assign a; prog_line pl;
Select a.stmt# with a.stmt# = pl
4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 51, 56, 61, 65, 69, 75, 79, 87, 90, 96, 101, 106, 110, 115, 119, 123, 129, 134, 137, 154, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 172, 176, 178, 180, 183, 185, 186, 187, 189, 194, 195, 196, 199, 200, 204, 206, 207, 208, 210, 211
5000
9 - With (Int on both sides, valid) (const.value, pl)
constant const; prog_line pl;
Select const with const.value = pl
211, 1, 2, 3, 4, 5, 6, 10, 32, 8, 9
5000
10 - With (Int on both sides, valid) (constValue, pl)
prog_line pl;
Select pl with 213 = pl
none
5000
11 - With (Int on both sides, valid) (constValue, s.stmt#)
stmt s;
Select s with 213 = s.stmt#
none
5000
12 - With (Int on both sides, valid) (const.value, s.stmt#)
constant const; stmt s;
Select const with const.value = s.stmt#
211, 1, 2, 3, 4, 5, 6, 10, 32, 8, 9
5000
13 - With (Int on both sides, valid) (a.stmt#, s.stmt#)
assign a; stmt s;
Select a with a.stmt# = s.stmt#
4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 51, 56, 61, 65, 69, 75, 79, 87, 90, 96, 101, 106, 110, 115, 119, 123, 129, 134, 137, 154, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 172, 176, 178, 180, 183, 185, 186, 187, 189, 194, 195, 196, 199, 200, 204, 206, 207, 208, 210, 211
5000
14 - With (Int on both sides, valid) (ifs.stmt#, s.stmt#)
if ifs; stmt s;
Select ifs with ifs.stmt# = s.stmt#
10, 52, 57, 80, 111, 126, 153, 155, 157, 167, 177, 181, 184, 188, 191, 197, 198, 203
5000
15 - With (Int on both sides, valid) (w.stmt#, s.stmt#)
while w; stmt s;
Select w.stmt# with w.stmt# = s.stmt#
32, 70, 83, 97, 102, 124, 162, 166, 170, 173, 174, 175, 182, 190, 192, 201, 202, 205
5000
16 - With (Int on both sides, valid) (c.stmt#, s.stmt#)
call c; stmt s;
Select c.stmt# with c.stmt# = s.stmt#
3, 13, 14, 23, 35, 50, 55, 60, 64, 68, 72, 74, 76, 88, 92, 94, 100, 105, 109, 114, 118, 120, 131, 135, 160, 179, 193, 209
5000
17 - With (Int on both sides, valid) (pn.stmt#, s.stmt#)
print pn; stmt s;
Select pn.stmt# with pn.stmt# = s.stmt#
2, 12, 22, 34, 49, 54, 59, 63, 66, 73, 77, 86, 91, 95, 99, 104, 107, 113, 117, 121, 130, 136
5000
18 - With (Int on both sides, valid) (rd.stmt#, s.stmt#)
read rd; stmt s;
Select rd.stmt# with rd.stmt# = s.stmt#
1, 11, 21, 33, 44, 45, 46, 47, 48, 53, 58, 62, 67, 71, 78, 81, 82, 84, 85, 89, 93, 98, 103, 108, 112, 116, 122, 125, 127, 128, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 212
5000
19 - With (Int on both sides, valid) (s.stmt#, s.stmt#)
stmt s;
Select s with s.stmt# = s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
5000
20 - With (Int on both sides, valid) (pl, s.stmt#)
prog_line pl; stmt s;
Select pl with pl = s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212
5000
21 - With (Int on both sides, valid) (pl, rd.stmt#)
prog_line pl; read rd;
Select pl with pl = rd.stmt#
1, 11, 21, 33, 44, 45, 46, 47, 48, 53, 58, 62, 67, 71, 78, 81, 82, 84, 85, 89, 93, 98, 103, 108, 112, 116, 122, 125, 127, 128, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 212
5000
22 - With (Int on both sides, valid) (s.stmt#, rd.stmt#)
stmt s; read rd;
Select s.stmt# with s.stmt# = rd.stmt#
1, 11, 21, 33, 44, 45, 46, 47, 48, 53, 58, 62, 67, 71, 78, 81, 82, 84, 85, 89, 93, 98, 103, 108, 112, 116, 122, 125, 127, 128, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 212
5000
23 - With (Int on both sides, valid) (rd.stmt#, rd.stmt#)
read rd;
Select rd with rd.stmt# = rd.stmt#
1, 11, 21, 33, 44, 45, 46, 47, 48, 53, 58, 62, 67, 71, 78, 81, 82, 84, 85, 89, 93, 98, 103, 108, 112, 116, 122, 125, 127, 128, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 212
5000
24 - With (Int on both sides, valid) (pn.stmt#, rd.stmt#)
print pn; read rd;
Select pn.stmt# with pn.stmt# = rd.stmt#
none
5000
25 - With (Int on both sides, valid) (c.stmt#, rd.stmt#)
call c; read rd;
Select c.stmt# with c.stmt# = rd.stmt#
none
5000
26 - With (Int on both sides, valid) (w.stmt#, rd.stmt#)
while w; read rd;
Select w.stmt# with w.stmt# = rd.stmt#
none
5000
27 - With (Int on both sides, valid) (ifs.stmt#, rd.stmt#)
if ifs; read rd;
Select ifs.stmt# with ifs.stmt# = rd.stmt#
none
5000
28 - With (Int on both sides, valid) (a.stmt#, rd.stmt#)
assign a; read rd;
Select a.stmt# with a.stmt# = rd.stmt#
none
5000
29 - With (Int on both sides, valid) (const.value, rd.stmt#)
constant const; read rd;
Select const.value with const.value = rd.stmt#
1
5000
30 - With (Int on both sides, valid) (constValue, rd.stmt#)
read rd;
Select rd.stmt# with 138 = rd.stmt#
138
5000
31 - With (Int on both sides, valid) (constValue, pn.stmt#)
print pn;
Select pn.stmt# with 66 = pn.stmt#
66
5000
32 - With (Int on both sides, valid) (const.value, pn.stmt#)
constant const; print pn;
Select const.value with const.value = pn.stmt#
2
5000
33 - With (Int on both sides, valid) (a.stmt#, pn.stmt#)
assign a; print pn;
Select a.stmt# with a.stmt# = pn.stmt#
none
5000
34 - With (Int on both sides, valid) (ifs.stmt#, pn.stmt#)
if ifs; print pn;
Select ifs.stmt# with ifs.stmt# = pn.stmt#
none
5000
35 - With (Int on both sides, valid) (w.stmt#, pn.stmt#)
while w; print pn;
Select w.stmt# with w.stmt# = pn.stmt#
none
5000
36 - With (Int on both sides, valid) (c.stmt#, pn.stmt#)
call c; print pn;
Select c.stmt# with c.stmt# = pn.stmt#
none
5000
37 - With (Int on both sides, valid) (pn.stmt#, pn.stmt#)
print pn;
Select pn.stmt# with pn.stmt# = pn.stmt#
2, 12, 22, 34, 49, 54, 59, 63, 66, 73, 77, 86, 91, 95, 99, 104, 107, 113, 117, 121, 130, 136
5000
38 - With (Int on both sides, valid) (rd.stmt#, pn.stmt#)
read rd; print pn;
Select rd.stmt# with rd.stmt# = pn.stmt#
none
5000
39 - With (Int on both sides, valid) (s.stmt#, pn.stmt#)
stmt s; print pn;
Select s.stmt# with s.stmt# = pn.stmt#
2, 12, 22, 34, 49, 54, 59, 63, 66, 73, 77, 86, 91, 95, 99, 104, 107, 113, 117, 121, 130, 136
5000
40 - With (Int on both sides, valid) (pl, pn.stmt#)
prog_line pl; print pn;
Select pl with pl = pn.stmt#
2, 12, 22, 34, 49, 54, 59, 63, 66, 73, 77, 86, 91, 95, 99, 104, 107, 113, 117, 121, 130, 136
5000
41 - With (Int on both sides, valid) (pl, c.stmt#)
prog_line pl; call c;
Select pl with pl = c.stmt#
3, 13, 14, 23, 35, 50, 55, 60, 64, 68, 72, 74, 76, 88, 92, 94, 100, 105, 109, 114, 118, 120, 131, 135, 160, 179, 193, 209
5000
42 - With (Int on both sides, valid) (s.stmt#, c.stmt#)
stmt s; call c;
Select s.stmt# with s.stmt# = c.stmt#
3, 13, 14, 23, 35, 50, 55, 60, 64, 68, 72, 74, 76, 88, 92, 94, 100, 105, 109, 114, 118, 120, 131, 135, 160, 179, 193, 209
5000
43 - With (Int on both sides, valid) (rd.stmt#, c.stmt#)
read rd; call c;
Select rd.stmt# with rd.stmt# = c.stmt#
none
5000
44 - With (Int on both sides, valid) (pn.stmt#, c.stmt#)
print pn; call c;
Select pn.stmt# with pn.stmt# = c.stmt#
none
5000
45 - With (Int on both sides, valid) (c.stmt#, c.stmt#)
call c;
Select c.stmt# with c.stmt# = c.stmt#
3, 13, 14, 23, 35, 50, 55, 60, 64, 68, 72, 74, 76, 88, 92, 94, 100, 105, 109, 114, 118, 120, 131, 135, 160, 179, 193, 209
5000
46 - With (Int on both sides, valid) (w.stmt#, c.stmt#)
while w; call c;
Select w.stmt# with w.stmt# = c.stmt#
none
5000
47 - With (Int on both sides, valid) (ifs.stmt#, c.stmt#)
if ifs; call c;
Select ifs.stmt# with ifs.stmt# = c.stmt#
none
5000
48 - With (Int on both sides, valid) (a.stmt#, c.stmt#)
assign a; call c;
Select a.stmt# with a.stmt# = c.stmt#
none
5000
49 - With (Int on both sides, valid) (const.value, c.stmt#)
constant const; call c;
Select const.value with const.value = c.stmt#
3
5000
50 - With (Int on both sides, valid) (constValue, c.stmt#)
call c;
Select c with 55 = c.stmt#
55
5000
51 - With (Int on both sides, valid) (constValue, w.stmt#)
while w;
Select w with 174 = w.stmt#
174
5000
52 - With (Int on both sides, valid) (const.value, w.stmt#)
constant const; while w;
Select const.value with const.value = w.stmt#
32
5000
53 - With (Int on both sides, valid) (a.stmt#, w.stmt#)
assign a; while w;
Select a.stmt# with a.stmt# = w.stmt#
none
5000
54 - With (Int on both sides, valid) (ifs.stmt#, w.stmt#)
if ifs; while w;
Select ifs.stmt# with ifs.stmt# = w.stmt#
none
5000
55 - With (Int on both sides, valid) (w.stmt#, w.stmt#)
while w;
Select w.stmt# with w.stmt# = w.stmt#
32, 70, 83, 97, 102, 124, 162, 166, 170, 173, 174, 175, 182, 190, 192, 201, 202, 205
5000
56 - With (Int on both sides, valid) (c.stmt#, w.stmt#)
call c; while w;
Select c.stmt# with c.stmt# = w.stmt#
none
5000
57 - With (Int on both sides, valid) (pn.stmt#, w.stmt#)
print pn; while w;
Select pn.stmt# with pn.stmt# = w.stmt#
none
5000
58 - With (Int on both sides, valid) (rd.stmt#, w.stmt#)
read rd; while w;
Select rd.stmt# with rd.stmt# = w.stmt#
none
5000
59 - With (Int on both sides, valid) (s.stmt#, w.stmt#)
stmt s; while w;
Select s.stmt# with s.stmt# = w.stmt#
32, 70, 83, 97, 102, 124, 162, 166, 170, 173, 174, 175, 182, 190, 192, 201, 202, 205
5000
60 - With (Int on both sides, valid) (pl, w.stmt#)
prog_line pl; while w;
Select pl with pl = w.stmt#
32, 70, 83, 97, 102, 124, 162, 166, 170, 173, 174, 175, 182, 190, 192, 201, 202, 205
5000
61 - With (Int on both sides, valid) (pl, ifs.stmt#)
prog_line pl; if ifs;
Select pl with pl = ifs.stmt#
10, 52, 57, 80, 111, 126, 153, 155, 157, 167, 177, 181, 184, 188, 191, 197, 198, 203
5000
62 - With (Int on both sides, valid) (s.stmt#, ifs.stmt#)
stmt s; if ifs;
Select s.stmt# with s.stmt# = ifs.stmt#
10, 52, 57, 80, 111, 126, 153, 155, 157, 167, 177, 181, 184, 188, 191, 197, 198, 203
5000
63 - With (Int on both sides, valid) (rd.stmt#, ifs.stmt#)
read rd; if ifs;
Select rd.stmt# with rd.stmt# = ifs.stmt#
none
5000
64 - With (Int on both sides, valid) (pn.stmt#, ifs.stmt#)
print pn; if ifs;
Select pn.stmt# with pn.stmt# = ifs.stmt#
none
5000
65 - With (Int on both sides, valid) (c.stmt#, ifs.stmt#)
call c; if ifs;
Select c.stmt# with c.stmt# = ifs.stmt#
none
5000
66 - With (Int on both sides, valid) (w.stmt#, ifs.stmt#)
while w; if ifs;
Select w.stmt# with w.stmt# = ifs.stmt#
none
5000
67 - With (Int on both sides, valid) (ifs.stmt#, ifs.stmt#)
if ifs;
Select ifs.stmt# with ifs.stmt# = ifs.stmt#
10, 52, 57, 80, 111, 126, 153, 155, 157, 167, 177, 181, 184, 188, 191, 197, 198, 203
5000
68 - With (Int on both sides, valid) (a.stmt#, ifs.stmt#)
assign a; if ifs;
Select a.stmt# with a.stmt# = ifs.stmt#
none
5000
69 - With (Int on both sides, valid) (const.value, ifs.stmt#)
constant const; if ifs;
Select const.value with const.value = ifs.stmt#
10
5000
70 - With (Int on both sides, valid) (constValue, ifs.stmt#)
if ifs;
Select ifs.stmt# with 153 = ifs.stmt#
153
5000
71 - With (Int on both sides, valid) (constValue, a.stmt#)
assign a;
Select a.stmt# with 9 = a.stmt#
9
5000
72 - With (Int on both sides, valid) (const.value, a.stmt#)
constant const; assign a;
Select const.value with const.value = a.stmt#
211, 4, 5, 6, 8, 9
5000
73 - With (Int on both sides, valid) (a.stmt#, a.stmt#)
assign a;
Select a.stmt# with a.stmt# = a.stmt#
4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 51, 56, 61, 65, 69, 75, 79, 87, 90, 96, 101, 106, 110, 115, 119, 123, 129, 134, 137, 154, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 172, 176, 178, 180, 183, 185, 186, 187, 189, 194, 195, 196, 199, 200, 204, 206, 207, 208, 210, 211
5000
74 - With (Int on both sides, valid) (ifs.stmt#, a.stmt#)
if ifs; assign a;
Select ifs.stmt# with ifs.stmt# = a.stmt#
none
5000
75 - With (Int on both sides, valid) (w.stmt#, a.stmt#)
while w; assign a;
Select w.stmt# with w.stmt# = a.stmt#
none
5000
76 - With (Int on both sides, valid) (c.stmt#, a.stmt#)
call c; assign a;
Select c.stmt# with c.stmt# = a.stmt#
none
5000
77 - With (Int on both sides, valid) (pn.stmt#, a.stmt#)
print pn; assign a;
Select pn.stmt# with pn.stmt# = a.stmt#
none
5000
78 - With (Int on both sides, valid) (rd.stmt#, a.stmt#)
read rd; assign a;
Select rd.stmt# with rd.stmt# = a.stmt#
none
5000
79 - With (Int on both sides, valid) (s.stmt#, a.stmt#)
stmt s; assign a;
Select s.stmt# with s.stmt# = a.stmt#
4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 51, 56, 61, 65, 69, 75, 79, 87, 90, 96, 101, 106, 110, 115, 119, 123, 129, 134, 137, 154, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 172, 176, 178, 180, 183, 185, 186, 187, 189, 194, 195, 196, 199, 200, 204, 206, 207, 208, 210, 211
5000
80 - With (Int on both sides, valid) (pl, a.stmt#)
prog_line pl; assign a;
Select pl with pl = a.stmt#
4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 51, 56, 61, 65, 69, 75, 79, 87, 90, 96, 101, 106, 110, 115, 119, 123, 129, 134, 137, 154, 156, 158, 159, 161, 163, 164, 165, 168, 169, 171, 172, 176, 178, 180, 183, 185, 186, 187, 189, 194, 195, 196, 199, 200, 204, 206, 207, 208, 210, 211
5000
81 - With (Int on both sides, valid) (pl, const.value)
prog_line pl; constant const;
Select pl with pl = const.value
211, 1, 2, 3, 4, 5, 6, 10, 32, 8, 9
5000
82 - With (Int on both sides, valid) (s.stmt#, const.value)
stmt s; constant const;
Select s.stmt# with s.stmt# = const.value
211, 1, 2, 3, 4, 5, 6, 10, 32, 8, 9
5000
83 - With (Int on both sides, valid) (rd.stmt#, const.value)
read rd; constant const;
Select rd.stmt# with rd.stmt# = const.value
1
5000
84 - With (Int on both sides, valid) (pn.stmt#, const.value)
print pn; constant const;
Select pn.stmt# with pn.stmt# = const.value
2
5000
85 - With (Int on both sides, valid) (c.stmt#, const.value)
call c; constant const;
Select c.stmt# with c.stmt# = const.value
3
5000
86 - With (Int on both sides, valid) (w.stmt#, const.value)
while w; constant const;
Select w.stmt# with w.stmt# = const.value
32
5000
87 - With (Int on both sides, valid) (ifs.stmt#, const.value)
if ifs; constant const;
Select ifs.stmt# with ifs.stmt# = const.value
10
5000
88 - With (Int on both sides, valid) (a.stmt#, const.value)
assign a; constant const;
Select a.stmt# with a.stmt# = const.value
211, 4, 5, 6, 8, 9
5000
89 - With (Int on both sides, valid) (const.value, const.value)
constant const;
Select const.value with const.value = const.value
211, 1, 2, 3, 4, 5, 6, 10, 0, 222, 32, 8, 9, 1337
5000
90 - With (Int on both sides, valid) (constValue, const.value)
constant const;
Select const with 222 = const.value
222
5000
91 - With (Int on both sides, valid) (constValue, constValue)
procedure p;
Select p.procName with 10000000 = 1000000000
none
5000
92 - With (Int on both sides, valid) (const.value, constValue)
constant const;
Select const.value with const.value = 1337
1337
5000
93 - With (Int on both sides, valid) (a.stmt#, constValue)
assign a;
Select a.stmt# with a.stmt# = 19
19
5000
94 - With (Int on both sides, valid) (ifs.stmt#, constValue)
if ifs;
Select ifs.stmt# with ifs.stmt# = 111
111
5000
95 - With (Int on both sides, valid) (w.stmt#, constValue)
while w;
Select w.stmt# with w.stmt# = 201
201
5000
96 - With (Int on both sides, valid) (c.stmt#, constValue)
call c;
Select c.stmt# with c.stmt# = 64
64
5000
97 - With (Int on both sides, valid) (pn.stmt#, constValue)
print pn;
Select pn.stmt# with pn.stmt# = 99
99
5000
98 - With (Int on both sides, valid) (rd.stmt#, constValue)
read rd;
Select rd.stmt# with rd.stmt# = 46
46
5000
99 - With (Int on both sides, valid) (s.stmt#, constValue)
stmt s;
Select s.stmt# with s.stmt# = 1
1
5000
100 - With (Int on both sides, valid) (pl, constValue)
prog_line pl;
Select pl with pl = 212
212
5000
101 - With (String on both sides, valid) (p.procName, p.procName)
procedure p;
Select p.procName with p.procName = p.procName
Flat, C, thenC, elseC, whileC, TwoNesting, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, ThreeNesting, FourNesting, FiveNesting, Final
5000
102 - With (String on both sides, valid) (c.procName, p.procName)
call c; procedure p;
Select c.procName with c.procName = p.procName
C, thenC, TwoNesting, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ThreeNesting, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, FourNesting, FiveNesting, Final
5000
103 - With (String on both sides, valid) (v.varName, p.procName)
variable v; procedure p;
Select v.varName with v.varName = p.procName
C, thenC, elseC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileC, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, ThreeNesting, FiveNesting, FourNesting, Flat, Final, TwoNesting
5000
104 - With (String on both sides, valid) (rd.varName, p.procName)
read rd; procedure p;
Select rd.varName with rd.varName = p.procName
C, thenC, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
105 - With (String on both sides, valid) (pn.varName, p.procName)
print pn; procedure p;
Select pn.varName with pn.varName = p.procName
none
5000
106 - With (String on both sides, valid) (string, p.procName)
procedure p;
Select p with "thenC" = p.procName
thenC
5000
107 - With (String on both sides, valid) (string, c.procName)
call c;
Select c.procName with "ifIfC" = c.procName
ifIfC
5000
108 - With (String on both sides, valid) (pn.varName, c.procName)
print pn; call c;
Select pn.varName with pn.varName = c.procName
none
5000
109 - With (String on both sides, valid) (rd.varName, c.procName)
read rd; call c;
Select rd.varName with rd.varName = c.procName
C, thenC, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
110 - With (String on both sides, valid) (v.varName, c.procName)
variable v; call c;
Select v.varName with v.varName = c.procName
C, thenC, elseC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileC, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, ThreeNesting, FiveNesting, FourNesting, Final, TwoNesting
5000
111 - With (String on both sides, valid) (c.procName, c.procName)
call c;
Select c.procName with c.procName = c.procName
C, thenC, TwoNesting, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ThreeNesting, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, FourNesting, FiveNesting, Final
5000
112 - With (String on both sides, valid) (p.procName, c.procName)
procedure p; call c;
Select p.procName with p.procName = c.procName
C, thenC, TwoNesting, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ThreeNesting, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, FourNesting, FiveNesting, Final
5000
113 - With (String on both sides, valid) (p.procName, v.varName)
procedure p; variable v;
Select p.procName with p.procName = v.varName
C, thenC, elseC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileC, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, ThreeNesting, FiveNesting, FourNesting, Flat, Final, TwoNesting
5000
114 - With (String on both sides, valid) (c.procName, v.varName)
call c; variable v;
Select c.procName with c.procName = v.varName
C, thenC, elseC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileC, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, ThreeNesting, FiveNesting, FourNesting, Final, TwoNesting
5000
115 - With (String on both sides, valid) (v.varName, v.varName)
variable v;
Select v.varName with v.varName = v.varName
A, B, a, b, c, C, D, E, F, d, e, f, thenA, thenB, thena, thenb, thenc, thenC, thenD, thenE, thenF, thend, thene, thenf, elseA, elseB, elsea, elseb, elsec, elseC, elseD, elseE, elseF, elsed, elsee, elsef, whilea, whileb, whilec, whileD, whileE, whileF, whiled, whilee, whilef, A1, D444, ifA, ifB, ifC, D521, ifIfA, ifIfB, ifIfC, ifElseA, ifElseB, ifElseC, ifB2, ifA2, ifC2, B32, D24, ifWhileA, ifWhileC, ifWhileB, ifB3, ifA3, ifC3, ifIfContainerStmt, ifElseContainerStmt, ifWhileContainerStmt, x, ifA4, ifB4, ifC4, A2, B2, C2, whileA, whileB, whileC, whileWhileA, whileWhileB, whileWhileC, whileB2, whileA2, whileC2, whileIfA, whileIfB, whileIfC, whileElseA, whileElseB, whileElseC, whileC3, whileB3, whileA3, whileWhileContainerStmt, whileIfContainerStmt, whileElseContainerStmt, whileA4, whileB4, whileC4, A3, B3, C3, A4, if, y, then, if3, eight, nine, ten, while, if2while, else, procedure, ifwhileif, nine9, ten10ten, eleven11even, if22, print, ifwhile2, twelve12twelve, thirteen, ThreeNesting, call, read, FiveNesting, FourNesting, Four4Nesting, pineapple, pear2, pear3, apple4, Flat, bahasa4, Final, TwoNesting
5000
116 - With (String on both sides, valid) (rd.varName, v.varName)
read rd; variable v;
Select rd.varName with rd.varName = v.varName
A, C, thenA, thenC, elseA, elseC, ifA, ifC, ifIfA, ifIfC, ifElseA, ifElseC, ifA2, ifC2, ifWhileA, ifWhileC, ifA3, ifC3, ifIfContainerStmt, ifElseContainerStmt, ifWhileContainerStmt, ifA4, ifC4, A2, C2, whileA, whileC, whileWhileA, whileWhileC, whileA2, whileC2, whileIfA, whileIfC, whileElseA, whileElseC, whileC3, whileA3, whileWhileContainerStmt, whileIfContainerStmt, whileElseContainerStmt, whileA4, whileC4, A3, C3, Final
5000
117 - With (String on both sides, valid) (pn.varName, v.varName)
print pn; variable v;
Select pn.varName with pn.varName = v.varName
B, thenB, elseB, ifB, ifIfB, ifElseB, ifB2, ifWhileB, ifB3, ifB4, B2, whileB, whileWhileB, whileB2, whileIfB, whileElseB, whileB3, whileB4, B3
5000
118 - With (String on both sides, valid) (string, v.varName)
variable v;
Select v with "D" = v.varName
D
5000
119 - With (String on both sides, valid) (string, rd.varName)
read rd;
Select rd.varName with "thenA" = rd.varName
thenA
5000
120 - With (String on both sides, valid) (pn.varName, rd.varName)
print pn; read rd;
Select pn.varName with pn.varName = rd.varName
none
5000
121 - With (String on both sides, valid) (rd.varName, rd.varName)
read rd;
Select rd.varName with rd.varName = rd.varName
A, thenA, elseA, whileA, C, thenC, elseC, whileC, ifA, ifIfA, ifElseA, ifA2, ifWhileA, ifA3, ifIfContainerStmt, ifElseContainerStmt, ifWhileContainerStmt, ifA4, A2, whileWhileA, whileA2, whileIfA, whileElseA, whileA3, whileWhileContainerStmt, whileIfContainerStmt, whileElseContainerStmt, whileA4, A3, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
122 - With (String on both sides, valid) (v.varName, rd.varName)
variable v; read rd;
Select v.varName with v.varName = rd.varName
A, C, thenA, thenC, elseA, elseC, ifA, ifC, ifIfA, ifIfC, ifElseA, ifElseC, ifA2, ifC2, ifWhileA, ifWhileC, ifA3, ifC3, ifIfContainerStmt, ifElseContainerStmt, ifWhileContainerStmt, ifA4, ifC4, A2, C2, whileA, whileC, whileWhileA, whileWhileC, whileA2, whileC2, whileIfA, whileIfC, whileElseA, whileElseC, whileC3, whileA3, whileWhileContainerStmt, whileIfContainerStmt, whileElseContainerStmt, whileA4, whileC4, A3, C3, Final
5000
123 - With (String on both sides, valid) (c.procName, rd.varName)
call c; read rd;
Select c.procName with c.procName = rd.varName
C, thenC, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
124 - With (String on both sides, valid) (p.procName, rd.varName)
procedure p; read rd;
Select p.procName with p.procName = rd.varName
C, thenC, elseC, whileC, ifC, ifIfC, ifElseC, ifC2, ifWhileC, ifC3, ifC4, C2, whileWhileC, whileC2, whileIfC, whileElseC, whileC3, whileC4, C3, Final
5000
125 - With (String on both sides, valid) (p.procName, pn.varName)
procedure p; print pn;
Select p.procName with p.procName = pn.varName
none
5000
126 - With (String on both sides, valid) (c.procName, pn.varName)
call c; print pn;
Select c.procName with c.procName = pn.varName
none
5000
127 - With (String on both sides, valid) (v.varName, pn.varName)
variable v; print pn;
Select v.varName with v.varName = pn.varName
B, thenB, elseB, whileB, ifB, ifIfB, ifElseB, ifB2, ifWhileB, ifB3, ifB4, B2, whileWhileB, whileB2, whileIfB, whileElseB, whileB3, whileB4, B3
5000
128 - With (String on both sides, valid) (rd.varName, pn.varName)
read rd; print pn;
Select rd.varName with rd.varName = pn.varName
none
5000
129 - With (String on both sides, valid) (pn.varName, pn.varName)
print pn;
Select pn.varName with pn.varName = pn.varName
B, thenB, elseB, whileB, ifB, ifIfB, ifElseB, ifB2, ifWhileB, ifB3, ifB4, B2, whileWhileB, whileB2, whileIfB, whileElseB, whileB3, whileB4, B3
5000
130 - With (String on both sides, valid) (string, pn.varName)
print pn;
Select pn.varName with "ifB" = pn.varName
ifB
5000
131 - With (String on both sides, valid) (string, string)
procedure p;
Select p with "hi" = "hii"
none
5000
132 - With (String on both sides, valid) (pn.varName, string)
print pn;
Select pn.varName with pn.varName = "whileWhileB"
whileWhileB
5000
133 - With (String on both sides, valid) (rd.varName, string)
read rd;
Select rd.varName with rd.varName = "ifIfContainerStmt"
ifIfContainerStmt
5000
134 - With (String on both sides, valid) (v.varName, string)
variable v;
Select v.varName with v.varName = "TwoNesting"
TwoNesting
5000
135 - With (String on both sides, valid) (c.procName, string)
call c;
Select c.procName with c.procName = "ifC2"
ifC2
5000
136 - With (String on both sides, valid) (p.procName, string)
procedure p;
Select p.procName with p.procName = "elseC"
elseC
5000
137 - With (Invalid combi, int string) (p.procName, prog_line)
procedure p;
Select p.procName with p.procName = prog_line
none
5000
138 - With (Invalid combi, int string) (c.procName, prog_line)
call c;
Select c.procName with c.procName = prog_line
none
5000
139 - With (Invalid combi, int string) (v.varName, prog_line)
variable v;
Select v.varName with v.varName = prog_line
none
5000
140 - With (Invalid combi, int string) (rd.varName, prog_line)
read rd;
Select rd.varName with rd.varName = prog_line
none
5000
141 - With (Invalid combi, int string) (pn.varName, prog_line)
print pn;
Select pn.varName with pn.varName = prog_line
none
5000
142 - With (Invalid combi, int string) (string, prog_line)
procedure p;
Select p with "TwoNesting" = prog_line
none
5000
143 - With (Invalid combi, int string) (string, s.stmt#)
stmt s;
Select s with "C" = s.stmt#
none
5000
144 - With (Invalid combi, int string) (pn.varName, s.stmt#)
print pn; stmt s;
Select pn.varName with pn.varName = s.stmt#
none
5000
145 - With (Invalid combi, int string) (rd.varName, s.stmt#)
read rd; stmt s;
Select rd.varName with rd.varName = s.stmt#
none
5000
146 - With (Invalid combi, int string) (v.varName, s.stmt#)
variable v; stmt s;
Select v.varName with v.varName = s.stmt#
none
5000
147 - With (Invalid combi, int string) (c.procName, s.stmt#)
call c; stmt s;
Select c.procName with c.procName = s.stmt#
none
5000
148 - With (Invalid combi, int string) (p.procName, s.stmt#)
procedure p; stmt s;
Select p.procName with p.procName = s.stmt#
none
5000
149 - With (Invalid combi, int string) (p.procName, rd.stmt#)
procedure p; read rd;
Select p.procName with p.procName = rd.stmt#
none
5000
150 - With (Invalid combi, int string) (c.procName, rd.stmt#)
call c; read rd;
Select c.procName with c.procName = rd.stmt#
none
5000
151 - With (Invalid combi, int string) (v.varName, rd.stmt#)
variable v; read rd;
Select v.varName with v.varName = rd.stmt#
none
5000
152 - With (Invalid combi, int string) (rd.varName, rd.stmt#)
read rd; read rd;
Select rd.varName with rd.varName = rd.stmt#
none
5000
153 - With (Invalid combi, int string) (pn.varName, rd.stmt#)
print pn; read rd;
Select pn.varName with pn.varName = rd.stmt#
none
5000
154 - With (Invalid combi, int string) (string, rd.stmt#)
read rd;
Select rd with "A" = rd.stmt#
none
5000
155 - With (Invalid combi, int string) (string, pn.stmt#)
print pn;
Select pn with "FiveNesting" = pn.stmt#
none
5000
156 - With (Invalid combi, int string) (pn.varName, pn.stmt#)
print pn; print pn;
Select pn.varName with pn.varName = pn.stmt#
none
5000
157 - With (Invalid combi, int string) (rd.varName, pn.stmt#)
read rd; print pn;
Select rd.varName with rd.varName = pn.stmt#
none
5000
158 - With (Invalid combi, int string) (v.varName, pn.stmt#)
variable v; print pn;
Select v.varName with v.varName = pn.stmt#
none
5000
159 - With (Invalid combi, int string) (c.procName, pn.stmt#)
call c; print pn;
Select c.procName with c.procName = pn.stmt#
none
5000
160 - With (Invalid combi, int string) (p.procName, pn.stmt#)
procedure p; print pn;
Select p.procName with p.procName = pn.stmt#
none
5000
161 - With (Invalid combi, int string) (p.procName, c.stmt#)
procedure p; call c;
Select p.procName with p.procName = c.stmt#
none
5000
162 - With (Invalid combi, int string) (c.procName, c.stmt#)
call c; call c;
Select c.procName with c.procName = c.stmt#
none
5000
163 - With (Invalid combi, int string) (v.varName, c.stmt#)
variable v; call c;
Select v.varName with v.varName = c.stmt#
none
5000
164 - With (Invalid combi, int string) (rd.varName, c.stmt#)
read rd; call c;
Select rd.varName with rd.varName = c.stmt#
none
5000
165 - With (Invalid combi, int string) (pn.varName, c.stmt#)
print pn; call c;
Select pn.varName with pn.varName = c.stmt#
none
5000
166 - With (Invalid combi, int string) (string, c.stmt#)
call c;
Select c with "elseC" = c.stmt#
none
5000
167 - With (Invalid combi, int string) (string, w.stmt#)
while w;
Select w with "FiveNesting" = w.stmt#
none
5000
168 - With (Invalid combi, int string) (pn.varName, w.stmt#)
print pn; while w;
Select pn.varName with pn.varName = w.stmt#
none
5000
169 - With (Invalid combi, int string) (rd.varName, w.stmt#)
read rd; while w;
Select rd.varName with rd.varName = w.stmt#
none
5000
170 - With (Invalid combi, int string) (v.varName, w.stmt#)
variable v; while w;
Select v.varName with v.varName = w.stmt#
none
5000
171 - With (Invalid combi, int string) (c.procName, w.stmt#)
call c; while w;
Select c.procName with c.procName = w.stmt#
none
5000
172 - With (Invalid combi, int string) (p.procName, w.stmt#)
procedure p; while w;
Select p.procName with p.procName = w.stmt#
none
5000
173 - With (Invalid combi, int string) (p.procName, ifs.stmt#)
procedure p; if ifs;
Select p.procName with p.procName = ifs.stmt#
none
5000
174 - With (Invalid combi, int string) (c.procName, ifs.stmt#)
call c; if ifs;
Select c.procName with c.procName = ifs.stmt#
none
5000
175 - With (Invalid combi, int string) (v.varName, ifs.stmt#)
variable v; if ifs;
Select v.varName with v.varName = ifs.stmt#
none
5000
176 - With (Invalid combi, int string) (rd.varName, ifs.stmt#)
read rd; if ifs;
Select rd.varName with rd.varName = ifs.stmt#
none
5000
177 - With (Invalid combi, int string) (pn.varName, ifs.stmt#)
print pn; if ifs;
Select pn.varName with pn.varName = ifs.stmt#
none
5000
178 - With (Invalid combi, int string) (string, ifs.stmt#)
if ifs;
Select ifs with "FiveNesting"= ifs.stmt#
none
5000
179 - With (Invalid combi, int string) (string, a.stmt#)
assign a;
Select a with "Final" = a.stmt#
none
5000
180 - With (Invalid combi, int string) (pn.varName, a.stmt#)
print pn; assign a;
Select pn.varName with pn.varName = a.stmt#
none
5000
181 - With (Invalid combi, int string) (rd.varName, a.stmt#)
read rd; assign a;
Select rd.varName with rd.varName = a.stmt#
none
5000
182 - With (Invalid combi, int string) (v.varName, a.stmt#)
variable v; assign a;
Select v.varName with v.varName = a.stmt#
none
5000
183 - With (Invalid combi, int string) (c.procName, a.stmt#)
call c; assign a;
Select c.procName with c.procName = a.stmt#
none
5000
184 - With (Invalid combi, int string) (p.procName, a.stmt#)
procedure p; assign a;
Select p.procName with p.procName = a.stmt#
none
5000
185 - With (Invalid combi, int string) (p.procName, const.value)
procedure p; constant const;
Select p.procName with p.procName = const.value
none
5000
186 - With (Invalid combi, int string) (c.procName, const.value)
call c; constant const;
Select c.procName with c.procName = const.value
none
5000
187 - With (Invalid combi, int string) (v.varName, const.value)
variable v; constant const;
Select v.varName with v.varName = const.value
none
5000
188 - With (Invalid combi, int string) (rd.varName, const.value)
read rd; constant const;
Select rd.varName with rd.varName = const.value
none
5000
189 - With (Invalid combi, int string) (pn.varName, const.value)
print pn; constant const;
Select pn.varName with pn.varName = const.value
none
5000
190 - With (Invalid combi, int string) (string, const.value)
constant const;
Select const with "if" = const.value
none
5000
191 - With (Invalid combi, int string) (string, constValue)
procedure p;
Select p with "Final" = 212
none
5000
192 - With (Invalid combi, int string) (pn.varName, constValue)
print pn;
Select pn.varName with pn.varName = 2
none
5000
193 - With (Invalid combi, int string) (rd.varName, constValue)
read rd;
Select rd.varName with rd.varName = 1
none
5000
194 - With (Invalid combi, int string) (v.varName, constValue)
variable v;
Select v.varName with v.varName = 4
none
5000
195 - With (Invalid combi, int string) (c.procName, constValue)
call c;
Select c.procName with c.procName = 3
none
5000
196 - With (Invalid combi, int string) (p.procName, constValue)
procedure p;
Select p.procName with p.procName = 213
none
5000
197 - With (Invalid out of range number) MANUALLY ADDED
prog_line pl;
Select pl with pl = 10000
none
5000
198 - With (Invalid out of range number) MANUALLY ADDED
prog_line pl;
Select pl with 10000 = pl
none
5000
199 - With (Invalid out of range number) MANUALLY ADDED
prog_line pl;
Select pl with pl = -1
none
5000
200 - With (Invalid out of range number) MANUALLY ADDED
prog_line pl;
Select pl with -1 = pl
none
5000
201 - With (Invalid out of range number) MANUALLY ADDED
stmt s;
Select s with s.stmt# = 10000
none
5000
202 - With (Invalid out of range number) MANUALLY ADDED
stmt s;
Select s with 10000 = s.stmt#
none
5000
203 - With (Invalid out of range number) MANUALLY ADDED
stmt s;
Select s with s.stmt# = -1
none
5000
204 - With (Invalid out of range number) MANUALLY ADDED
stmt s;
Select s with -1 = s.stmt#
none
5000
205 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.varName with rd.stmt# = 10000
none
5000
206 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.varName with 10000 = rd.stmt#
none
5000
207 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.varName with rd.stmt# = -1
none
5000
208 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.varName with -1 = rd.stmt#
none
5000
209 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.stmt# with rd.stmt# = 10000
none
5000
210 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.stmt# with 10000 = rd.stmt#
none
5000
211 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.stmt# with rd.stmt# = -1
none
5000
212 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd.stmt# with -1 = rd.stmt#
none
5000
213 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd with rd.stmt# = 10000
none
5000
214 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd with 10000 = rd.stmt#
none
5000
215 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd with rd.stmt# = -1
none
5000
216 - With (Invalid out of range number) MANUALLY ADDED
read rd;
Select rd with -1 = rd.stmt#
none
5000
217 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.varName with pn.stmt# = 10000
none
5000
218 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.varName with 10000 = pn.stmt#
none
5000
219 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.varName with pn.stmt# = -1
none
5000
220 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.varName with -1 = pn.stmt#
none
5000
221 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.stmt# with pn.stmt# = 10000
none
5000
222 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.stmt# with 10000 = pn.stmt#
none
5000
223 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.stmt# with pn.stmt# = -1
none
5000
224 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn.stmt# with -1 = pn.stmt#
none
5000
225 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn with pn.stmt# = 10000
none
5000
226 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn with 10000 = pn.stmt#
none
5000
227 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn with pn.stmt# = -1
none
5000
228 - With (Invalid out of range number) MANUALLY ADDED
print pn;
Select pn with -1 = pn.stmt#
none
5000
229 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.procName with c.stmt# = 10000
none
5000
230 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.procName with 10000 = c.stmt#
none
5000
231 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.procName with c.stmt# = -1
none
5000
232 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.procName with -1 = c.stmt#
none
5000
233 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.stmt# with c.stmt# = 10000
none
5000
234 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.stmt# with 10000 = c.stmt#
none
5000
235 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.stmt# with c.stmt# = -1
none
5000
236 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c.stmt# with -1 = c.stmt#
none
5000
237 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c with c.stmt# = 10000
none
5000
238 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c with 10000 = c.stmt#
none
5000
239 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c with c.stmt# = -1
none
5000
240 - With (Invalid out of range number) MANUALLY ADDED
call c;
Select c with -1 = c.stmt#
none
5000
241 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w.stmt# with w.stmt# = 10000
none
5000
242 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w.stmt# with 10000 = w.stmt#
none
5000
243 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w.stmt# with w.stmt# = -1
none
5000
244 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w.stmt# with -1 = w.stmt#
none
5000
245 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w with w.stmt# = 10000
none
5000
246 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w with 10000 = w.stmt#
none
5000
247 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w with w.stmt# = -1
none
5000
248 - With (Invalid out of range number) MANUALLY ADDED
while w;
Select w with -1 = w.stmt#
none
5000
249 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs.stmt# with ifs.stmt# = 10000
none
5000
250 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs.stmt# with 10000 = ifs.stmt#
none
5000
251 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs.stmt# with ifs.stmt# = -1
none
5000
252 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs.stmt# with -1 = ifs.stmt#
none
5000
253 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs with ifs.stmt# = 10000
none
5000
254 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs with 10000 = ifs.stmt#
none
5000
255 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs with ifs.stmt# = -1
none
5000
256 - With (Invalid out of range number) MANUALLY ADDED
if ifs;
Select ifs with -1 = ifs.stmt#
none
5000
257 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a.stmt# with a.stmt# = 10000
none
5000
258 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a.stmt# with 10000 = a.stmt#
none
5000
259 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a.stmt# with a.stmt# = -1
none
5000
260 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a.stmt# with -1 = a.stmt#
none
5000
261 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a with a.stmt# = 10000
none
5000
262 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a with 10000 = a.stmt#
none
5000
263 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a with a.stmt# = -1
none
5000
264 - With (Invalid out of range number) MANUALLY ADDED
assign a;
Select a with -1 = a.stmt#
none
5000
265 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const.value with const.value = 10000
none
5000
266 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const.value with 10000 = const.value
none
5000
267 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const.value with const.value = -1
none
5000
268 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const.value with -1 = const.value
none
5000
269 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with const.value = 10000
none
5000
270 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with 10000 = const.value
none
5000
271 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with const.value = -1
none
5000
272 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with -1 = const.value
none
5000
273 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with -1 = 1
none
5000
274 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with 212 = 213
none
5000
275 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with 1 = -1
none
5000
276 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with 213 = 212
none
5000
277 - With (Valid) MANUALLY ADDED
constant const;
Select const with 213 = 213
211, 1, 2, 3, 4, 5, 6, 10, 32, 8, 9, 0, 222, 1337
5000
277 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with -1 = 10000
none
5000
278 - With (Invalid out of range number) MANUALLY ADDED
constant const;
Select const with 10000 = -1
none
5000
279 - With (Invalid string) missing closing colon
variable v;
Select v with "D = v.varName
none
5000
280 - With (Invalid string) missing opening colon
variable v;
Select v with D" = v.varName
none
5000
281 - With (Invalid string, not in source)
procedure p;
Select p with "Z1" = p.procName
none
5000
282 - With (Invalid string, not in source)
procedure p;
Select p with p.procName = "Z1"
none
5000
283 - With (Invalid string, not in source)
procedure p;
Select p.procName with "Z1" = p.procName
none
5000
284 - With (Invalid string, not in source)
procedure p;
Select p.procName with p.procName = "Z1"
none
5000
285 - With (Invalid string, not in source)
call c;
Select c with "Z1" = c.procName
none
5000
286 - With (Invalid string, not in source)
call c;
Select c with c.procName = "Z1"
none
5000
287 - With (Invalid string, not in source)
call c;
Select c.procName with c.procName = "Z1"
none
5000
288 - With (Invalid string, not in source)
call c;
Select c.procName with "Z1" = c.procName
none
5000
289 - With (Invalid string, not in source)
variable v;
Select v with "Z1" = v.varName
none
5000
290 - With (Invalid string, not in source)
variable v;
Select v with v.varName = "Z1"
none
5000
291 - With (Invalid string, not in source)
variable v;
Select v.varName with "Z1" = v.varName
none
5000
292 - With (Invalid string, not in source)
variable v;
Select v.varName with v.varName = "Z1"
none
5000
293 - With (Invalid string, not in source)
read rd;
Select rd with "Z1" = rd.varName
none
5000
294 - With (Invalid string, not in source)
read rd;
Select rd with rd.varName = "Z1"
none
5000
295 - With (Invalid string, not in source)
read rd;
Select rd.varName with "Z1" = rd.varName
none
5000
296 - With (Invalid string, not in source)
read rd;
Select rd.varName with rd.varName = "Z1"
none
5000
297 - With (Invalid string, not in source)
print pn;
Select pn with "Z1" = pn.varName
none
5000
298 - With (Invalid string, not in source)
print pn;
Select pn with pn.varName = "Z1"
none
5000
299 - With (Invalid string, not in source)
print pn;
Select pn.varName with "Z1" = pn.varName
none
5000
300 - With (Invalid string, not in source)
print pn;
Select pn.varName with pn.varName = "Z1"
none
5000
301 - With (Invalid string, not in source)
procedure p;
Select p with "Z11" = "Z1"
none
5000
302 - With (Invalid string, not in source)
procedure p;
Select p with "Z1" = "Z11"
none
5000
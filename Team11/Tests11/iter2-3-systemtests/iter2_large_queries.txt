1 - select all stmts
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113
5000
2 - select all read
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select r
6, 8, 15, 20, 30, 32, 35, 57, 60, 68, 89, 102, 106
5000
3 - select all print
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select pn
5, 16, 21, 31, 33, 36, 52, 69, 88, 103, 107
5000
4 - select all while
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select w
12, 13, 18, 38, 39, 40, 55, 59, 64, 70, 72, 84, 100, 108
5000
5 - select all if
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select ifs
3, 14, 26, 41, 50, 77, 86, 97, 111
5000
6 - select all assign
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a
1, 2, 4, 7, 9, 10, 11, 17, 19, 22, 23, 24, 27, 28, 46, 47, 53, 58, 61, 62, 63, 65, 66, 67, 75, 76, 90, 92, 98, 99, 104, 105, 109, 112
5000
7 - select all variable
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select v
a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, r, t, u, x, y, A, B, C, D, F, G, J, KLM, ab, bc, de
5000
8 - select all constants
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select c
0, 3, 10, 20, 23, 30, 33, 40, 45, 50, 60, 67, 70, 80, 90, 100, 200, 300, 400, 800, 850
5000
9 - select all procedures
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select p
a, b, c, d, e, f, g, h, i, j
5000
10 - select all call
call call; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select call
25, 29, 34, 37, 42, 43, 44, 45, 48, 49, 51, 54, 56, 71, 73, 74, 78, 79, 80, 81, 82, 83, 85, 87, 91, 93, 94, 95, 96, 101, 110, 113
5000
11 - Next, select boolean for prog lines belonging to different procedures
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select BOOLEAN such that Next (1,11)
FALSE
5000
12 - Next, select synonym for prog lines belonging to same procedure
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select BOOLEAN such that Next (1,2)
TRUE
5000
13 - Next, select tuple for prog lines belonging to same procedure
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select < a > such that Next* (1,2) pattern a(_,"200-20 ")
75
5000
14 - select clauses in different order but same result
assign a; while w;
Select a such that Modifies (a, "b") and Parent* (w, a) and Next* (59, a)
62,66
5000
15 - select clauses in different order but same result
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Parent* (w, a) and Modifies (a, "b") such that Next* (59, a)
62,66
5000
16 - select clauses in different order but same result
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Next* (59, a) and Parent* (w, a) and Modifies (a, "b")
62,66
5000
17 - select clauses in different order but same result
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a pattern a ("b", _) such that Parent* (w, a) such that Next* (59, a)
62,66
5000
18 - select clauses in different order but same result
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Parent* (w, a) and Next* (59, a) pattern a ("b", _)
62,66
5000
19 - select clauses in different order but same result
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Next* (59, a) and Parent* (w, a) pattern a ("b", _)
62,66
5000
20 - syntactically incorrect query, and should not be used to connect or introduce clauses of different types
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Parent* (w, a) and Modifies (a, "b") and such that Next* (1, a)
none
5000
21 - syntactically incorrect query and should not be used to connect or introduce clauses of different types
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Parent* (w, a) and pattern a ("b", _) such that Next* (1, a)
none
5000
22 - syntactically incorrect query and should not be used to connect or introduce clauses of different types
stmt s; read r; print pn; while w; if ifs; assign a; variable v; constant c; procedure p;
Select a such that Parent* (w, a) pattern a ("b", _) and Next* (1, a)
none
5000
23 - select tuple that modifies variable y
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select <p, q> such that Modifies (w, "x")
a a,a b,a c,a d,a e,a f,a g,a h,a i,a j,b a,b b,b c,b d,b e,b f,b g,b h,b i,b j,c a,c b,c c,c d,c e,c f,c g,c h,c i,c j,d a,d b,d c,d d,d e,d f,d g,d h,d i,d j,e a,e b,e c,e d,e e,e f,e g,e h,e i,e j,f a,f b,f c,f d,f e,f f,f g,f h,f i,f j,g a,g b,g c,g d,g e,g f,g g,g h,g i,g j,h a,h b,h c,h d,h e,h f,h g,h h,h i,h j,i a,i b,i c,i d,i e,i f,i g,i h,i i,i j,j a,j b,j c,j d,j e,j f,j g,j h,j i,j j
5000
24 - select all combi of read and print statements if procedure g calls procedure d
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; read r; if ifs; print pn;
Select <ifs, pn> such that Calls ("g", "d")
3 5, 3 16, 3 21, 3 31, 3 33, 3 36, 3 52, 3 69, 3 88, 3 103, 3 107, 14 5, 14 16, 14 21, 14 31, 14 33, 14 36, 14 52, 14 69, 14 88, 14 103, 14 107, 26 5, 26 16, 26 21, 26 31, 26 33, 26 36, 26 52, 26 69, 26 88, 26 103, 26 107, 41 5, 41 16, 41 21, 41 31, 41 33, 41 36, 41 52, 41 69, 41 88, 41 103, 41 107, 50 5, 50 16, 50 21, 50 31, 50 33, 50 36, 50 52, 50 69, 50 88, 50 103, 50 107, 77 5, 77 16, 77 21, 77 31, 77 33, 77 36, 77 52, 77 69, 77 88, 77 103, 77 107, 86 5, 86 16, 86 21, 86 31, 86 33, 86 36, 86 52, 86 69, 86 88, 86 103, 86 107, 97 5, 97 16, 97 21, 97 31, 97 33, 97 36, 97 52, 97 69, 97 88, 97 103, 97 107, 111 5, 111 16, 111 21, 111 31, 111 33, 111 36, 111 52, 111 69, 111 88, 111 103, 111 107
5000
25 - Calls, return TRUE if there is a procedure that calls other procedure
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select BOOLEAN such that Calls (_,_)
TRUE
5000
26 - select all assignment statements if statement 112 is assignment statement
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select a1 with 112 = a.stmt#
1, 2, 4, 7, 9, 10, 11, 17, 19, 22, 23, 24, 27, 28, 46, 47, 53, 58, 61, 62, 63, 65, 66, 67, 75, 76, 90, 92, 98, 99, 104, 105, 109, 112
5000
27 - select all assignment statements if statement 112 is assignment statement
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select a1 with a.stmt# = 112
1, 2, 4, 7, 9, 10, 11, 17, 19, 22, 23, 24, 27, 28, 46, 47, 53, 58, 61, 62, 63, 65, 66, 67, 75, 76, 90, 92, 98, 99, 104, 105, 109, 112
5000
28 - Meaningless query, should still return TRUE
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select BOOLEAN with 12 = 12
TRUE
5000
29 - If statement 12 is an assignment statement, return true
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2;
Select BOOLEAN with a.stmt# = 12
FALSE
5000
30 - Calls, invalid query since parameter contains synonym that is not type procedure
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select q such that Calls (pn, q)
none
5000
30 - Calls, select procedures that call procedure f
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select p such that Calls (p, "f")
c, d, e, g, h, i
5000
31 - Calls*, select procedures that indirectly calls f
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select p such that Calls* (p, "f")
c,d,e,g,h,i,j
5000
32 - Calls*, return TRUE if procedure j indirectly calls b
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select BOOLEAN such that Calls* ("j", "b")
TRUE
5000
33 - Calls*, return TRUE if procedure d indirectly calls g
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select BOOLEAN such that Calls* ("d", "g")
FALSE
5000
34 - Next*, select tuple if Next relation is true
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select <p,w> such that Next* (39, 46)
b 12, b 13, b 18, d 38,d 39,d 40, e 55, f 59, f 64, g 70, g 72, h 84,a 100,a 108,a 12,a 13,a 18,a 38,a 39,a 40,a 55,a 59,a 64,a 70,a 72,a 84,b 100,b 108,b 38,b 39,b 40,b 55,b 59,b 64,b 70,b 72,b 84,c 100,c 108,c 12,c 13,c 18,c 38,c 39,c 40,c 55,c 59,c 64,c 70,c 72,c 84,d 100,d 108,d 12,d 13,d 18,d 55,d 59,d 64,d 70,d 72,d 84,e 100,e 108,e 12,e 13,e 18,e 38,e 39,e 40,e 59,e 64,e 70,e 72,e 84,f 100,f 108,f 12,f 13,f 18,f 38,f 39,f 40,f 55,f 70,f 72,f 84,g 100,g 108,g 12,g 13,g 18,g 38,g 39,g 40,g 55,g 59,g 64,g 84,h 100,h 108,h 12,h 13,h 18,h 38,h 39,h 40,h 55,h 59,h 64,h 70,h 72,i 100,i 108,i 12,i 13,i 18,i 38,i 39,i 40,i 55,i 59,i 64,i 70,i 72,i 84,j 100,j 108,j 12,j 13,j 18,j 38,j 39,j 40,j 55,j 59,j 64,j 70,j 72,j 84
5000
34 - Assignment, select assignment statements that has subexpression 90 + 40
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select a pattern a(_,_"90+40"_)
9
5000
35 - Assignment, select assignment statements that has subexpression (90 + 40)
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select a pattern a(_,_"(90+40)"_)
9
5000
36 - Assignment, select assignment statements that has subexpression d*a/b
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select a pattern a(_,_"d*a/b"_)
9
5000
36 - Assignment, select assignment statements that has subexpression f+d*a/b
procedure p, q; assign a, a1; while w; variable v; prog_line n1, n2; print pn;
Select a pattern a(_,_"f+d*a/b"_)
none
5000
37 - If pattern, return statements that are if statement and use variable(s) in condition
if ifs; while w;
Select ifs pattern ifs(_,_,_)
3, 14, 26, 41, 50, 77, 86, 97, 111
5000
38 - While pattern, return statements that are while statement and use variable(s) in condition
if ifs; while w;
Select w pattern w(_,_)
12, 13, 18, 38, 39, 40, 55, 59, 64, 70, 72, 84, 100, 108
5000
39 - If pattern,return tuple of if statement with control variable and the control variable
if ifs; while w; variable v;
Select <ifs, v> pattern ifs(v,_,_)
3 a, 3 b, 3 c, 14 a,14 b, 14 g, 26 a, 26 b, 26 g, 41 a, 41 c, 41 b, 50 d, 77 b, 77 c, 77 d, 86 a, 86 b, 97 m, 97 l, 97 p, 111 y
5000
39 - While pattern,return tuple of while statement with control variable and the control variable
if ifs; while w; variable v;
Select <w, v> pattern w(v,_)
12 a, 12 c, 12 b, 12 j, 13 a, 13 b, 18 a, 18 b, 38 d,38 b, 38 e, 39 d, 39 e,39 f, 39 g, 39 c, 39 a, 39 b, 40 a, 40 b, 55 i, 59 a, 59 b, 64 d, 64 g, 64 f, 70 a, 70 x, 72 b, 84 f, 84 h, 84 d, 100 F, 100 c, 108 c, 108 x
5000
40 - Find statements that follow 77
prog_line n; stmt s;
Select s.stmt# such that Follows* (s, n) with n=77
73, 74, 75, 76
5000
41 - Invalid query
prog_line n; stmt s, s1;
Select s.stmt# such that Follows* (s, s1) with s1.stmt#=n and n=77
73, 74, 75, 76
5000
42 - Find while loops with assignment to variable f
assign a; while w;
Select w such that Parent* (w, a) pattern a ("f", _)
59, 84
5000
43 - Find assignments that use and modify the same variable
assign a; variable v;
Select a such that Uses (a, v) pattern a (v, _)
17, 19, 28, 46, 53, 58, 90, 109
5000
44 - Find assignments that use and modify the variable a
assign a; while w;
Select a pattern a ("a", _) such that Uses (a, "a")
19, 46
5000
45 - Find assignments that use and modify the variable a
assign a; while w;
Select a pattern a ("a", _) such that Uses (a, "a")
19, 46
5000
46 - Find assignments that are nested directly or indirectly in a while loop and modify the variable b
assign a; while w;
Select a such that Parent* (w, a) pattern a ("b", _)
62,66, 90
5000
47 - Find assignments that are nested directly or indirectly in a while loop and modify the variable b
assign a; while w;
Select a pattern a ("b", _) such that Parent* (w, a)
62,66, 90
5000
48 - Find procedures in the program that call another procedure
procedure p, q;
Select p.procName such that Calls (p, q)
c, d, e, g, h, i, j
5000
49 - Find procedures that directly call procedure c and modify variable x
procedure p, q;
Select p such that Calls (p, q) with q.procName = "c" such that Modifies (p, "x")
g,i
5000
50 - Find procedures that are called from d in a while loop
procedure p; call c; while w;
Select p such that Calls ("d", p) and Parent (w, c) with c.procName = p.procName
a, b, e, f
5000
51 - Return TRUE if there is an execution path from statement 71 to 70

Select BOOLEAN such that Next* (71, 70)
TRUE
5000
52 - Return TRUE if there an execution path from statement 13 to 12 that passes through 17

Select BOOLEAN such that Next* (13, 12) and Next* (13, 17)
TRUE
5000
53 - Find assignments to variable l located in a loop, that can be reached from statement 11
assign a; while w;
Select a pattern a ("l", _) such that Parent* (w, a) and Next* (11, a)
17
5000
55 - Find all statements whose statement number is equal to some constant
stmt s; constant c;
Select s with s.stmt# = c.value
3, 10, 20, 23, 30, 33, 40, 45, 50, 60, 67, 70, 80, 90, 100
5000
56 - Find procedures whose name is the same as the name of some variable
stmt s; procedure p; variable v;
Select p with p.procName = v.varName
a, b, c, d, e, f, g, h, i, j
5000
57 - Find three while loops nested one in another
while w1, w2, w3;
Select <w1, w2, w3> such that Parent* (w1, w2) and Parent* (w2, w3)
12 13 18,38 39 40
5000
58 - Find all assignments with variable ab on the left, located in some while loop, and that can be reached from line 105
assign a; while w; prog_line n;
Select a such that Parent* (w, a) and Next* (60, n) pattern a("ab", _) with a.stmt# = n
none
5000
59 - Find all while statements with c as a control variable
while w;
Select w pattern w ("c", _)
12, 39, 100, 108
5000
60 - Invalid query as right hand side of pattern while should only be wildcard
while w;
Select w pattern w ("c", "c")
none
5000

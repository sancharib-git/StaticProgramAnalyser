1 - select all procs that call another proc
procedure p, q;
Select p such that Calls(p, q)
a, b, c, e
5000
2 - select all procs that call* another proc
procedure p, q;
Select p such that Calls*(p, q)
a, b, c, e
5000
3 - select procs that are calls*-ed by another proc
procedure p, q;
Select q such that Calls*(_,q)
a, c, d, e
5000
4 - calls* with names where callee name is specified
procedure p, q;
Select p such that Calls*(p, "d")
a, b, c, e
5000
5 - calls* with name where caller's name is specified
procedure p, q;
Select q such that Calls*("b", q)
a, c, d, e
5000
6 - Calls with no answers
procedure p;
Select p such that Calls("d", p)
none
5000
7 - Calls* with all procedures as answers
procedure p;
Select p such that Calls*("a", _)
a, b, c, d, e
5000
8 - Calls*(_,_)
procedure p;
Select p such that Calls*(_, _)
a, b, c, d, e
5000
9 - call.procname
procedure c;
Select c.procName such that Calls(c, _)
a, b, c, e
5000
10 - procedure.procname
procedure p;
Select p.procName such that Calls(p, "d")
b, c, e
5000
11 - Uses relation with Calls
variable v; call c;
Select v such that Uses(c, v)
a, b, c, j, p, q, x, y, z
5000
12 - Modifies relation of Calls
variable v; call c;
Select v such that Modifies(c, v)
a, b, c, d, f, i, p, q, x, y, z
5000
13 - Select procedures that modify a certain variable: tests calls rln
procedure p;
Select p such that Modifies(p, "i")
a, b, c, e
5000
14 - Select procedures that use a certain variable: tests calls rln
procedure p;
Select p such that Uses(p, "j")
a, b, c, e
5000
15 - Parent relations of call statements (if call p is a child, are all statements in p also a child?)
stmt s;
Select s such that Parent(12, s)
13, 14
5000
16 - Parent* relations of call statements
stmt s;
Select s such that Parent*(20, s)
none
5000
17 - Next relation N-PL
prog_line s;
Select s such that Next(2, s)
3
5000
18 - Next relation PL-PL
prog_line s, p;
Select s such that Next(s, p)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82
5000
19 - Next relation N-N clause false
prog_line p;
Select p such that Next(21,22)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
20 - Next relation N-N clause true
prog_line n;
Select n such that Next(16,17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
21 - Next* relation N-PL
prog_line p;
Select p such that Next*(13, p)
12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37
5000
22 - Next* relation PL-PL
prog_line s, p;
Select s such that Next*(s, p)
1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82
5000
23 - Next * relation N-N clause true
prog_line p;
Select p such that Next*(15, 18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
24 - Next * relation N-N clause false
prog_line p;
Select p such that Next*(27, 24)
1,10,11,12,13,14,15,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,3,30,31,32,33,34,35,36,37,38,39,4,40,41,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,59,6,60,61,62,63,64,65,66,67,68,69,7,70,71,72,73,74,75,76,77,78,79,8,80,81,82,83,9
5000
25 - Next* relation wild card first param
prog_line s;
Select s such that Next*(s, 3)
1, 2
5000
26 - Next * wild card first param
prog_line prog;
Select prog such that Next*(_, prog)
2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48,49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
27 - Next* wild card second param
prog_line p;
Select p such that Next*(2, p)
3,4,5,6,7,8
5000
28 - Next* with no results
prog_line p;
Select p such that Next(23, p)
24, 35
5000
29 - Next wild card, wild card
prog_line p;
Select p such that Next(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
30 - Next* wild card, wild card
prog_line p;
Select p such that Next*(_,_)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83
5000
31 - Assignment Pattern no underscores
assign a;
Select a pattern a (_, "10")
1, 2, 3, 9, 10, 47
5000
32 - Assignment pattern with underscore
assign a;
Select a pattern a (_, _"10"_)
1, 2, 3, 9, 10, 37, 47, 64
5000
33 - Assignment pattern with underscore and extra spaces in front
assign a;
Select a pattern a (_, _"   10"_)
1, 2, 3, 9, 10, 37, 47, 64
5000
34 - Assignment pattern with underscore and extra spaces behind
assign a;
Select a pattern a (_, _"10    "_)
1, 2, 3, 9, 10, 37, 47, 64
5000
35 - Assignment pattern with underscore and extra spaces infront and behind
assign a;
Select a pattern a (_, _"    10    "_)
1, 2, 3, 9, 10, 37, 47, 64
5000
36 - Assignment pattern with LHS variable
assign a; variable v;
Select a pattern a (v, _"20"_)
11, 37, 48, 65
5000
37 - Assignment pattern with LHS variable specified
assign a;
Select a pattern a ("a", _"10"_)
1, 37, 64
5000
38 - Assignment pattern wildcard, wildcard
assign a;
Select a pattern a(_,_)
1, 2, 3, 8, 9, 10, 11, 24, 26, 27, 29, 32, 34, 35, 37, 43, 47, 48, 49, 50, 51, 57, 61, 63, 64, 65, 73, 78, 82
5000
39 - While pattern wildcard wildcard (while stmts that use variable)
while w;
Select w pattern w(_,_)
4, 12, 21, 22, 30, 33, 52, 53, 54, 55, 56, 58, 59, 60, 62, 68, 69, 70, 71, 72, 75, 76, 77, 80
5000
40 - While pattern variable - wildcard
while w; variable v;
Select w pattern w(v, _)
4, 12, 21, 22, 30, 33, 52, 53, 54, 55, 56, 58, 59, 60, 62, 68, 69, 70, 71, 72, 75, 76, 77, 80
5000
41 - While pattern variable specified - wildcard
while w;
Select w pattern w("c", _)
4
5000
42 - if pattern wildcards
if ifs;
select ifs pattern ifs(_,_,_)
none
5000
43 - if pattern variable wildcard
if ifs; variable v;
Select ifs pattern ifs(v,_,_)
14, 18, 23, 25, 28, 39, 41, 42
5000
44 - if pattern variable specified wildcard
if ifs;
Select ifs pattern ifs("g",_,_)
14, 25, 28
5000
45 - Multiple such that clauses - find all variables used by assignment and while
assign a; while w; variable v;
Select v such that Uses(a, v) such that Uses(w, v)
a, b, f, g, p, q, y, z
5000
46 - Multiple such that, with clause, variables modified by assignment stmts whose number is a constant and is used by while
variable v; assign a; while w; constant c;
Select v such that Modifies(a, v) such that Uses(w, v) with a.stmt# = c.value
a, b, g, c, p
5000
47 - such that, and , with : select variables used by if stmt 20, and modified by assignment stmts
assign a; variable v; if ifs;
Select v such that Uses(ifs, v) and Modifies(a, v) with ifs.stmt# = 20
none
5000
48 - select boolean with 1 clause
stmt s;
Select BOOLEAN such that Calls*("b","a")
TRUE
5000
49 - select boolean with multiple clauses, Next* returns false, rest are true
stmt s;
Select BOOLEAN such that Parent*(4, 5) and Calls("b", "e") and Next*(20, 24)
TRUE
5000
50 - boolean meaningless query
stmt s; assign a; while w; constant c; if ifs;
Select BOOLEAN with a.stmt# = 10 with c.value = 5 with ifs.stmt# = 14 with w.stmt# = 12
TRUE
5000
51 - boolean meaningless query false
stmt s; assign a; while w; constant c; if ifs;
Select BOOLEAN with a.stmt# = 10 with w.stmt# = 12 with c.value = 5 with ifs.stmt# = 13
FALSE
5000
52 - Procedure such that it contains a while statement which is the parent of an assignment statement
stmt s; assign a; while w; procedure p;
Select p such that Parent(p, w) such that Parent(w, a)
none
5000
53 - While statements which modifies an assignment statement
stmt s; assign a; while w;
Select w such that Parent*(w, a) such that Modifies(a, _)
12, 21, 22, 30, 33, 52, 53, 54, 55, 56, 58, 59, 60, 62, 68, 69, 70, 71, 72, 75, 76, 77, 80 
5000
54 - Procedures that calls procedure c
stmt s; procedure p; 
Select p such that Calls(p, "c")
a, b
5000
55 - Procedures that calls procedure c and d
stmt s; procedure p; 
Select p such that Calls(p, "c") and Calls(p, "d")
b
5000
56 - while statement such that it contains the call statement which calls a
stmt s; procedure p; call c; while w;
Select w such that Parent(w, c) such that Call(c, "a")
none
5000
57 - procedure where call statement followed by while
stmt s; procedure p; call c; while w;
Select p such that Follows(c, w)
a,b,c,d,e
5000
58 - procedure where call statement followed indirectly by while
stmt s; procedure p; call c; while w;
Select p such that Follows*(c, w)
a,b,c,d,e
5000
59 - procedure where call statement followed by read
stmt s; procedure p; call c; while w;read rd;
Select p such that Follows(c, rd)
a,b,c,d,e
5000
60 - procedure where call statement followed indirectly by read
stmt s; procedure p; call c; while w;read rd;
Select p such that Follows*(c, rd)
a,b,c,d,e
5000
61 - procedure where call statement followed by print
stmt s; procedure p; call c; while w;print pr;
Select p such that Follows(c, pr)
none
5000
62 - procedure where call statement followed indirectly by print
stmt s; procedure p; call c; while w;print pr;
Select p such that Follows*(c, pr)
a,b,c,d,e
5000
63 - procedure where call statement followed by assignment
stmt s; procedure p; call c; while w;assign a;
Select p such that Follows(c, a)
a,b,c,d,e
5000
64 - procedure where call statement followed indirectly by assignment
stmt s; procedure p; call c; while w;assign a;
Select p such that Follows*(c, a)
a,b,c,d,e
5000
65 - call statements where call statement followed by read
stmt s; procedure p; call c; while w;read rd;
Select c such that Follows(c, rd)
16
5000
66 - call statements where call statement followed indirectly by read
stmt s; procedure p; call c; while w;read rd;
Select c such that Follows*(c, rd)
16
5000
67 - call statements where call statement followed by print
stmt s; procedure p; call c; while w;print pr;
Select c such that Follows(c, pr)
none
5000
68 - call statements where call statement followed indirectly by print
stmt s; procedure p; call c; while w;print pr;
Select c such that Follows*(c, pr)
67
5000
69 - call statements where call statement followed by assignment
stmt s; procedure p; call c; while w;assign a;
Select c such that Follows(c, a)
7,31
5000
70 - call statements where call statement followed indirectly by assignment
stmt s; procedure p; call c; while w;assign a;
Select c such that Follows*(c, a)
7,16,31
5000
71 - return multiple synonyms
stmt s; procedure p; while w; assign a;
Select <w, a> such that Follows*(w, a)
4 8, 21 37, 52 64
5000
72 - return multiple synonyms
stmt s; procedure p; while w; assign a;
Select <w, a, p> such that Follows*(w, a)
4 8 a, 4 8 b, 4 8 c, 4 8 d, 4 8 e, 21 37 a,21 37 b,21 37 c,21 37 d,21 37 e,52 64 a,52 64 b,52 64 c,52 64 d,52 64 e
5000
73 - return multiple synonyms
stmt s; procedure p; while w; assign a; call c;
Select <w, a, p, c> such that Follows*(w, a) such that Follows*(w, c)
4 8 a 7,4 8 b 7,4 8 c 7,4 8 d 7,4 8 e 7
5000
74 - return multiple synonyms
stmt s; procedure p; while w; assign a; call c; if ifs;
Select <w, ifs> such that Next*(w, ifs)
12 14,12 18,12 23,12 25,12 28,21 23,21 25,21 28,22 23,22 25,22 28,21 14,21 18,22 14,22 18,30 14,30 18,30 23,30 25,30 28,33 14,33 18,33 23,33 25,33 28
5000
75 - return multiple synonyms
stmt s; procedure p; while w; call c;
Select <p, w, c> such that Parent(w, c)
a 12 13,a 30 31,b 12 13,b 30 31,c 12 13,c 30 31,d 12 13,d 30 31,e 12 13,e 30 31
5000
76 - return multiple synonyms
procedure p; while w; assign a;
Select <p, w> such that Parent(w, a)
a 30,a 33,a 56,a 60,a 62,a 72,a 77,a 80,b 30,b 33,b 56,b 60,b 62,b 72,b 77,b 80,c 30,c 33,c 56,c 60,c 62,c 72,c 77,c 80,d 30,d 33,d 56,d 60,d 62,d 72,d 77,d 80,e 30,e 33,e 56,e 60,e 62,e 72,e 77,e 80
5000
77 - return multiple synonyms
procedure p; while w; assign a;
Select w such that Parent(w, a)
30, 33, 56, 60, 62, 72, 77, 80
5000